# src/models/user_change.py
from datetime import datetime
from sqlalchemy import text
from src.models.user import db  # your existing SQLAlchemy instance

class UserChange(db.Model):
    __tablename__ = 'user_changes'

    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.String(36), nullable=False)
    field_name = db.Column(db.String(128), nullable=False)
    old_value = db.Column(db.Text)
    new_value = db.Column(db.Text)
    change_type = db.Column(db.String(64), default='update')
    change_timestamp = db.Column(db.DateTime, default=datetime.utcnow, nullable=False)
    admin_reviewed = db.Column(db.Boolean, default=False, nullable=False)

    # NEW: store the ERF number snapshot at the time of change
    erf_number = db.Column(db.String(32), nullable=True)


def ensure_user_changes_table():
    """
    Make sure user_changes exists and has the new erf_number column.
    We keep this idempotent so it's safe to call on every boot.
    """
    # 1) Create table if it doesn't exist (includes erf_number)
    db.session.execute(text("""
        CREATE TABLE IF NOT EXISTS user_changes (
            id              INTEGER PRIMARY KEY
                                {} ,
            user_id         VARCHAR(36) NOT NULL,
            field_name      VARCHAR(128) NOT NULL,
            old_value       TEXT,
            new_value       TEXT,
            change_type     VARCHAR(64) DEFAULT 'update',
            change_timestamp TIMESTAMP NOT NULL DEFAULT ({}),
            admin_reviewed  BOOLEAN NOT NULL DEFAULT 0,
            erf_number      VARCHAR(32)
        )
    """.format(
        # Primary-key syntax tweak for Postgres vs SQLite
        " " if db.engine.dialect.name == "sqlite" else "GENERATED BY DEFAULT AS IDENTITY",
        # Cross-db default timestamp
        "CURRENT_TIMESTAMP" if db.engine.dialect.name == "sqlite" else "NOW()"
    )))
    db.session.commit()

    # 2) Add erf_number column if table already existed without it
    try:
        db.session.execute(text("ALTER TABLE user_changes ADD COLUMN erf_number VARCHAR(32)"))
        db.session.commit()
    except Exception:
        db.session.rollback()
        # Column probably already exists; ignore
